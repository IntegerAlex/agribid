/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TermsandconditionImport } from './routes/termsandcondition'
import { Route as ShippingpolicyImport } from './routes/shippingpolicy'
import { Route as ReturnpolicyImport } from './routes/returnpolicy'
import { Route as RegistrationImport } from './routes/registration'
import { Route as PrivacypolicyImport } from './routes/privacypolicy'
import { Route as MarketplaceImport } from './routes/marketplace'
import { Route as LoginImport } from './routes/login'
import { Route as KnowledgecenterImport } from './routes/knowledgecenter'
import { Route as FaqImport } from './routes/faq'
import { Route as IndexImport } from './routes/index'
import { Route as PartnerwithusPacsImport } from './routes/partnerwithus.pacs'
import { Route as PartnerwithusFpoImport } from './routes/partnerwithus.fpo'
import { Route as PartnerwithusFpcImport } from './routes/partnerwithus.fpc'
import { Route as PartnerwithusDsaImport } from './routes/partnerwithus.dsa'
import { Route as EventsNewsImport } from './routes/events.news'
import { Route as EventsAwardsImport } from './routes/events.awards'
import { Route as AboutWhoareweImport } from './routes/about.whoarewe'
import { Route as AboutOurteamLegacyImport } from './routes/about.ourteam-legacy'
import { Route as AboutOurteamImport } from './routes/about.ourteam'
import { Route as AboutGalleryImport } from './routes/about.gallery'

// Create/Update Routes

const TermsandconditionRoute = TermsandconditionImport.update({
  id: '/termsandcondition',
  path: '/termsandcondition',
  getParentRoute: () => rootRoute,
} as any)

const ShippingpolicyRoute = ShippingpolicyImport.update({
  id: '/shippingpolicy',
  path: '/shippingpolicy',
  getParentRoute: () => rootRoute,
} as any)

const ReturnpolicyRoute = ReturnpolicyImport.update({
  id: '/returnpolicy',
  path: '/returnpolicy',
  getParentRoute: () => rootRoute,
} as any)

const RegistrationRoute = RegistrationImport.update({
  id: '/registration',
  path: '/registration',
  getParentRoute: () => rootRoute,
} as any)

const PrivacypolicyRoute = PrivacypolicyImport.update({
  id: '/privacypolicy',
  path: '/privacypolicy',
  getParentRoute: () => rootRoute,
} as any)

const MarketplaceRoute = MarketplaceImport.update({
  id: '/marketplace',
  path: '/marketplace',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const KnowledgecenterRoute = KnowledgecenterImport.update({
  id: '/knowledgecenter',
  path: '/knowledgecenter',
  getParentRoute: () => rootRoute,
} as any)

const FaqRoute = FaqImport.update({
  id: '/faq',
  path: '/faq',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PartnerwithusPacsRoute = PartnerwithusPacsImport.update({
  id: '/partnerwithus/pacs',
  path: '/partnerwithus/pacs',
  getParentRoute: () => rootRoute,
} as any)

const PartnerwithusFpoRoute = PartnerwithusFpoImport.update({
  id: '/partnerwithus/fpo',
  path: '/partnerwithus/fpo',
  getParentRoute: () => rootRoute,
} as any)

const PartnerwithusFpcRoute = PartnerwithusFpcImport.update({
  id: '/partnerwithus/fpc',
  path: '/partnerwithus/fpc',
  getParentRoute: () => rootRoute,
} as any)

const PartnerwithusDsaRoute = PartnerwithusDsaImport.update({
  id: '/partnerwithus/dsa',
  path: '/partnerwithus/dsa',
  getParentRoute: () => rootRoute,
} as any)

const EventsNewsRoute = EventsNewsImport.update({
  id: '/events/news',
  path: '/events/news',
  getParentRoute: () => rootRoute,
} as any)

const EventsAwardsRoute = EventsAwardsImport.update({
  id: '/events/awards',
  path: '/events/awards',
  getParentRoute: () => rootRoute,
} as any)

const AboutWhoareweRoute = AboutWhoareweImport.update({
  id: '/about/whoarewe',
  path: '/about/whoarewe',
  getParentRoute: () => rootRoute,
} as any)

const AboutOurteamLegacyRoute = AboutOurteamLegacyImport.update({
  id: '/about/ourteam-legacy',
  path: '/about/ourteam-legacy',
  getParentRoute: () => rootRoute,
} as any)

const AboutOurteamRoute = AboutOurteamImport.update({
  id: '/about/ourteam',
  path: '/about/ourteam',
  getParentRoute: () => rootRoute,
} as any)

const AboutGalleryRoute = AboutGalleryImport.update({
  id: '/about/gallery',
  path: '/about/gallery',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/faq': {
      id: '/faq'
      path: '/faq'
      fullPath: '/faq'
      preLoaderRoute: typeof FaqImport
      parentRoute: typeof rootRoute
    }
    '/knowledgecenter': {
      id: '/knowledgecenter'
      path: '/knowledgecenter'
      fullPath: '/knowledgecenter'
      preLoaderRoute: typeof KnowledgecenterImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/marketplace': {
      id: '/marketplace'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceImport
      parentRoute: typeof rootRoute
    }
    '/privacypolicy': {
      id: '/privacypolicy'
      path: '/privacypolicy'
      fullPath: '/privacypolicy'
      preLoaderRoute: typeof PrivacypolicyImport
      parentRoute: typeof rootRoute
    }
    '/registration': {
      id: '/registration'
      path: '/registration'
      fullPath: '/registration'
      preLoaderRoute: typeof RegistrationImport
      parentRoute: typeof rootRoute
    }
    '/returnpolicy': {
      id: '/returnpolicy'
      path: '/returnpolicy'
      fullPath: '/returnpolicy'
      preLoaderRoute: typeof ReturnpolicyImport
      parentRoute: typeof rootRoute
    }
    '/shippingpolicy': {
      id: '/shippingpolicy'
      path: '/shippingpolicy'
      fullPath: '/shippingpolicy'
      preLoaderRoute: typeof ShippingpolicyImport
      parentRoute: typeof rootRoute
    }
    '/termsandcondition': {
      id: '/termsandcondition'
      path: '/termsandcondition'
      fullPath: '/termsandcondition'
      preLoaderRoute: typeof TermsandconditionImport
      parentRoute: typeof rootRoute
    }
    '/about/gallery': {
      id: '/about/gallery'
      path: '/about/gallery'
      fullPath: '/about/gallery'
      preLoaderRoute: typeof AboutGalleryImport
      parentRoute: typeof rootRoute
    }
    '/about/ourteam': {
      id: '/about/ourteam'
      path: '/about/ourteam'
      fullPath: '/about/ourteam'
      preLoaderRoute: typeof AboutOurteamImport
      parentRoute: typeof rootRoute
    }
    '/about/ourteam-legacy': {
      id: '/about/ourteam-legacy'
      path: '/about/ourteam-legacy'
      fullPath: '/about/ourteam-legacy'
      preLoaderRoute: typeof AboutOurteamLegacyImport
      parentRoute: typeof rootRoute
    }
    '/about/whoarewe': {
      id: '/about/whoarewe'
      path: '/about/whoarewe'
      fullPath: '/about/whoarewe'
      preLoaderRoute: typeof AboutWhoareweImport
      parentRoute: typeof rootRoute
    }
    '/events/awards': {
      id: '/events/awards'
      path: '/events/awards'
      fullPath: '/events/awards'
      preLoaderRoute: typeof EventsAwardsImport
      parentRoute: typeof rootRoute
    }
    '/events/news': {
      id: '/events/news'
      path: '/events/news'
      fullPath: '/events/news'
      preLoaderRoute: typeof EventsNewsImport
      parentRoute: typeof rootRoute
    }
    '/partnerwithus/dsa': {
      id: '/partnerwithus/dsa'
      path: '/partnerwithus/dsa'
      fullPath: '/partnerwithus/dsa'
      preLoaderRoute: typeof PartnerwithusDsaImport
      parentRoute: typeof rootRoute
    }
    '/partnerwithus/fpc': {
      id: '/partnerwithus/fpc'
      path: '/partnerwithus/fpc'
      fullPath: '/partnerwithus/fpc'
      preLoaderRoute: typeof PartnerwithusFpcImport
      parentRoute: typeof rootRoute
    }
    '/partnerwithus/fpo': {
      id: '/partnerwithus/fpo'
      path: '/partnerwithus/fpo'
      fullPath: '/partnerwithus/fpo'
      preLoaderRoute: typeof PartnerwithusFpoImport
      parentRoute: typeof rootRoute
    }
    '/partnerwithus/pacs': {
      id: '/partnerwithus/pacs'
      path: '/partnerwithus/pacs'
      fullPath: '/partnerwithus/pacs'
      preLoaderRoute: typeof PartnerwithusPacsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/faq': typeof FaqRoute
  '/knowledgecenter': typeof KnowledgecenterRoute
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/privacypolicy': typeof PrivacypolicyRoute
  '/registration': typeof RegistrationRoute
  '/returnpolicy': typeof ReturnpolicyRoute
  '/shippingpolicy': typeof ShippingpolicyRoute
  '/termsandcondition': typeof TermsandconditionRoute
  '/about/gallery': typeof AboutGalleryRoute
  '/about/ourteam': typeof AboutOurteamRoute
  '/about/ourteam-legacy': typeof AboutOurteamLegacyRoute
  '/about/whoarewe': typeof AboutWhoareweRoute
  '/events/awards': typeof EventsAwardsRoute
  '/events/news': typeof EventsNewsRoute
  '/partnerwithus/dsa': typeof PartnerwithusDsaRoute
  '/partnerwithus/fpc': typeof PartnerwithusFpcRoute
  '/partnerwithus/fpo': typeof PartnerwithusFpoRoute
  '/partnerwithus/pacs': typeof PartnerwithusPacsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/faq': typeof FaqRoute
  '/knowledgecenter': typeof KnowledgecenterRoute
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/privacypolicy': typeof PrivacypolicyRoute
  '/registration': typeof RegistrationRoute
  '/returnpolicy': typeof ReturnpolicyRoute
  '/shippingpolicy': typeof ShippingpolicyRoute
  '/termsandcondition': typeof TermsandconditionRoute
  '/about/gallery': typeof AboutGalleryRoute
  '/about/ourteam': typeof AboutOurteamRoute
  '/about/ourteam-legacy': typeof AboutOurteamLegacyRoute
  '/about/whoarewe': typeof AboutWhoareweRoute
  '/events/awards': typeof EventsAwardsRoute
  '/events/news': typeof EventsNewsRoute
  '/partnerwithus/dsa': typeof PartnerwithusDsaRoute
  '/partnerwithus/fpc': typeof PartnerwithusFpcRoute
  '/partnerwithus/fpo': typeof PartnerwithusFpoRoute
  '/partnerwithus/pacs': typeof PartnerwithusPacsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/faq': typeof FaqRoute
  '/knowledgecenter': typeof KnowledgecenterRoute
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/privacypolicy': typeof PrivacypolicyRoute
  '/registration': typeof RegistrationRoute
  '/returnpolicy': typeof ReturnpolicyRoute
  '/shippingpolicy': typeof ShippingpolicyRoute
  '/termsandcondition': typeof TermsandconditionRoute
  '/about/gallery': typeof AboutGalleryRoute
  '/about/ourteam': typeof AboutOurteamRoute
  '/about/ourteam-legacy': typeof AboutOurteamLegacyRoute
  '/about/whoarewe': typeof AboutWhoareweRoute
  '/events/awards': typeof EventsAwardsRoute
  '/events/news': typeof EventsNewsRoute
  '/partnerwithus/dsa': typeof PartnerwithusDsaRoute
  '/partnerwithus/fpc': typeof PartnerwithusFpcRoute
  '/partnerwithus/fpo': typeof PartnerwithusFpoRoute
  '/partnerwithus/pacs': typeof PartnerwithusPacsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/faq'
    | '/knowledgecenter'
    | '/login'
    | '/marketplace'
    | '/privacypolicy'
    | '/registration'
    | '/returnpolicy'
    | '/shippingpolicy'
    | '/termsandcondition'
    | '/about/gallery'
    | '/about/ourteam'
    | '/about/ourteam-legacy'
    | '/about/whoarewe'
    | '/events/awards'
    | '/events/news'
    | '/partnerwithus/dsa'
    | '/partnerwithus/fpc'
    | '/partnerwithus/fpo'
    | '/partnerwithus/pacs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/faq'
    | '/knowledgecenter'
    | '/login'
    | '/marketplace'
    | '/privacypolicy'
    | '/registration'
    | '/returnpolicy'
    | '/shippingpolicy'
    | '/termsandcondition'
    | '/about/gallery'
    | '/about/ourteam'
    | '/about/ourteam-legacy'
    | '/about/whoarewe'
    | '/events/awards'
    | '/events/news'
    | '/partnerwithus/dsa'
    | '/partnerwithus/fpc'
    | '/partnerwithus/fpo'
    | '/partnerwithus/pacs'
  id:
    | '__root__'
    | '/'
    | '/faq'
    | '/knowledgecenter'
    | '/login'
    | '/marketplace'
    | '/privacypolicy'
    | '/registration'
    | '/returnpolicy'
    | '/shippingpolicy'
    | '/termsandcondition'
    | '/about/gallery'
    | '/about/ourteam'
    | '/about/ourteam-legacy'
    | '/about/whoarewe'
    | '/events/awards'
    | '/events/news'
    | '/partnerwithus/dsa'
    | '/partnerwithus/fpc'
    | '/partnerwithus/fpo'
    | '/partnerwithus/pacs'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FaqRoute: typeof FaqRoute
  KnowledgecenterRoute: typeof KnowledgecenterRoute
  LoginRoute: typeof LoginRoute
  MarketplaceRoute: typeof MarketplaceRoute
  PrivacypolicyRoute: typeof PrivacypolicyRoute
  RegistrationRoute: typeof RegistrationRoute
  ReturnpolicyRoute: typeof ReturnpolicyRoute
  ShippingpolicyRoute: typeof ShippingpolicyRoute
  TermsandconditionRoute: typeof TermsandconditionRoute
  AboutGalleryRoute: typeof AboutGalleryRoute
  AboutOurteamRoute: typeof AboutOurteamRoute
  AboutOurteamLegacyRoute: typeof AboutOurteamLegacyRoute
  AboutWhoareweRoute: typeof AboutWhoareweRoute
  EventsAwardsRoute: typeof EventsAwardsRoute
  EventsNewsRoute: typeof EventsNewsRoute
  PartnerwithusDsaRoute: typeof PartnerwithusDsaRoute
  PartnerwithusFpcRoute: typeof PartnerwithusFpcRoute
  PartnerwithusFpoRoute: typeof PartnerwithusFpoRoute
  PartnerwithusPacsRoute: typeof PartnerwithusPacsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FaqRoute: FaqRoute,
  KnowledgecenterRoute: KnowledgecenterRoute,
  LoginRoute: LoginRoute,
  MarketplaceRoute: MarketplaceRoute,
  PrivacypolicyRoute: PrivacypolicyRoute,
  RegistrationRoute: RegistrationRoute,
  ReturnpolicyRoute: ReturnpolicyRoute,
  ShippingpolicyRoute: ShippingpolicyRoute,
  TermsandconditionRoute: TermsandconditionRoute,
  AboutGalleryRoute: AboutGalleryRoute,
  AboutOurteamRoute: AboutOurteamRoute,
  AboutOurteamLegacyRoute: AboutOurteamLegacyRoute,
  AboutWhoareweRoute: AboutWhoareweRoute,
  EventsAwardsRoute: EventsAwardsRoute,
  EventsNewsRoute: EventsNewsRoute,
  PartnerwithusDsaRoute: PartnerwithusDsaRoute,
  PartnerwithusFpcRoute: PartnerwithusFpcRoute,
  PartnerwithusFpoRoute: PartnerwithusFpoRoute,
  PartnerwithusPacsRoute: PartnerwithusPacsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/faq",
        "/knowledgecenter",
        "/login",
        "/marketplace",
        "/privacypolicy",
        "/registration",
        "/returnpolicy",
        "/shippingpolicy",
        "/termsandcondition",
        "/about/gallery",
        "/about/ourteam",
        "/about/ourteam-legacy",
        "/about/whoarewe",
        "/events/awards",
        "/events/news",
        "/partnerwithus/dsa",
        "/partnerwithus/fpc",
        "/partnerwithus/fpo",
        "/partnerwithus/pacs"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/faq": {
      "filePath": "faq.tsx"
    },
    "/knowledgecenter": {
      "filePath": "knowledgecenter.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/marketplace": {
      "filePath": "marketplace.tsx"
    },
    "/privacypolicy": {
      "filePath": "privacypolicy.tsx"
    },
    "/registration": {
      "filePath": "registration.tsx"
    },
    "/returnpolicy": {
      "filePath": "returnpolicy.tsx"
    },
    "/shippingpolicy": {
      "filePath": "shippingpolicy.tsx"
    },
    "/termsandcondition": {
      "filePath": "termsandcondition.tsx"
    },
    "/about/gallery": {
      "filePath": "about.gallery.tsx"
    },
    "/about/ourteam": {
      "filePath": "about.ourteam.tsx"
    },
    "/about/ourteam-legacy": {
      "filePath": "about.ourteam-legacy.tsx"
    },
    "/about/whoarewe": {
      "filePath": "about.whoarewe.tsx"
    },
    "/events/awards": {
      "filePath": "events.awards.tsx"
    },
    "/events/news": {
      "filePath": "events.news.tsx"
    },
    "/partnerwithus/dsa": {
      "filePath": "partnerwithus.dsa.tsx"
    },
    "/partnerwithus/fpc": {
      "filePath": "partnerwithus.fpc.tsx"
    },
    "/partnerwithus/fpo": {
      "filePath": "partnerwithus.fpo.tsx"
    },
    "/partnerwithus/pacs": {
      "filePath": "partnerwithus.pacs.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
